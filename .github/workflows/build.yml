name: Create and publish a Docker image

on:
  push:
    branches: ["main"]
    paths:
      - "src/**"
      - "patches/**"
      - "package.json"
      - "package-lock.json"
      - "tsconfig.json"
      - ".eslintrc.js"
      - ".prettierrc.js"
      - "Dockerfile"
      - "docker-compose.yml"
      - ".github/workflows/build.yml"
  workflow_dispatch:

# Debounce mechanism: combines concurrency control with delay to group multiple PRs
# - Only one build runs at a time for the main branch
# - If a new push occurs during the 10-minute delay, the current run is cancelled
# - This results in grouping multiple merged PRs into a single release
concurrency:
  group: build-${{ github.ref_name }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Debounce - Wait for potential new commits
        run: |
          echo "‚è±Ô∏è  Waiting 10 minutes to debounce multiple pushes to main..."
          echo "If new commits are pushed during this time, this run will be cancelled."
          sleep 10m

      - name: Checkout repository
        uses: actions/checkout@v5

      - id: normalize-repository-name
        run: echo "repository=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata and set tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ steps.normalize-repository-name.outputs.repository }}
          tags: |
            type=raw,value=latest
            type=sha,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Create Release
        run: |
          gh release create sha-${{ github.sha }} \
            --title "Release sha-${{ github.sha }}" \
            --notes "üê≥ Docker image published to GitHub Container Registry

          **Image:** \`${{ env.REGISTRY }}/${{ github.repository }}:sha-${{ github.sha }}\`
          **Tag:** \`sha-${{ github.sha }}\`
          **Commit:** ${{ github.sha }}

          Pull with: \`docker pull ${{ env.REGISTRY }}/${{ steps.normalize-repository-name.outputs.repository }}:sha-${{ github.sha }}\`" \
            --generate-notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
