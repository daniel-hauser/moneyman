diff --git a/node_modules/israeli-bank-scrapers/lib/helpers/fetch.js b/node_modules/israeli-bank-scrapers/lib/helpers/fetch.js
index f55f1a2..8b63b8a 100644
--- a/node_modules/israeli-bank-scrapers/lib/helpers/fetch.js
+++ b/node_modules/israeli-bank-scrapers/lib/helpers/fetch.js
@@ -47,24 +47,18 @@ async function fetchGraphql(url, query, variables = {}, extraHeaders = {}) {
 }
 exports.fetchGraphql = fetchGraphql;
 function fetchGetWithinPage(page, url) {
-    return page.evaluate(innerUrl => {
-        return new Promise((resolve, reject) => {
-            fetch(innerUrl, {
-                credentials: 'include',
-            })
-                .then(result => {
-                if (result.status === 204) {
-                    resolve(null);
-                }
-                else {
-                    resolve(result.json());
-                }
-            })
-                .catch(e => {
-                reject(e);
-            });
-        });
-    }, url);
+    return page.evaluate(async innerUrl => {
+      let result;
+      try {
+        result = await fetch(innerUrl, { credentials: 'include' });
+        if (result.status === 204) {
+          return null;
+        }
+        return result.json();
+      } catch (e) {
+        throw new Error(`fetchGetWithinPage error: ${e}, url: ${innerUrl}, stack: ${e?.stack}, status: ${result?.status}`);
+      }
+    });
 }
 exports.fetchGetWithinPage = fetchGetWithinPage;
 function fetchPostWithinPage(page, url, data, extraHeaders = {}) {
diff --git a/node_modules/israeli-bank-scrapers/lib/scrapers/base-isracard-amex.js b/node_modules/israeli-bank-scrapers/lib/scrapers/base-isracard-amex.js
index bc85eb9..4623524 100644
--- a/node_modules/israeli-bank-scrapers/lib/scrapers/base-isracard-amex.js
+++ b/node_modules/israeli-bank-scrapers/lib/scrapers/base-isracard-amex.js
@@ -242,6 +242,16 @@ class IsracardAmexBaseScraper extends base_scraper_with_browser_1.BaseScraperWit
         });
         await (0, browser_1.maskHeadlessUserAgent)(this.page);
         await this.navigateTo(`${this.baseUrl}/personalarea/Login`);
+        try {
+          const initialPageTitle = await this.page.title();
+          debug("initial page title: ", initialPageTitle);
+          if (!initialPageTitle.includes('ישראכרט') && !initialPageTitle.includes('אמריקן אקספרס')) {
+            debug("waiting for page to load");
+            await this.page.waitForNavigation({ timeout: 60_000 });
+          }
+        } catch (error) {
+          debug("error while waiting for navigation: ", error);
+        }
         this.emitProgress(definitions_1.ScraperProgressTypes.LoggingIn);
         const validateUrl = `${this.servicesUrl}?reqName=ValidateIdData`;
         const validateRequest = {
